# Production Docker Compose project
version: '3'
services:
  db:
    image: postgres
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  web:
    build: .
    command: >
      bash -c "python manage.py collectstatic --no-input &&
               python manage.py migrate &&
               gunicorn --workers=3 config.wsgi -b 0.0.0.0:8000"
    volumes:
      - .:/app
      - static:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE
      - SECRET_KEY
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - ASSETS_STORAGE_URL
      - ALPHA_PASSWORD
      - EMAIL_PASSWORD
      - EMAIL_HOST
      - EMAIL_PORT
      - EMAIL_USER
    depends_on:
      - db

  db2:
    image: postgres
    volumes:
      - pg2data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    restart: unless-stopped

  directus:
    image: directus/directus:10
    ports:
      - 8055:8055
    volumes:
      - directus_database:/directus/database
      - directus_uploads:/directus/uploads
    environment:
      - KEY
      - SECRET
      - DB_CLIENT
      - DB_HOST
      - DB_PORT
      - DB_DATABASE
      - DB_USER
      - DB_PASSWORD
      - ADMIN_EMAIL
      - ADMIN_PASSWORD
    depends_on:
      - db2
    restart: unless-stopped

  caddy:
    image: caddy:2.7.6
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - static:/static

volumes:
  pgdata:
  pg2data:
  directus_database:
  directus_uploads:
  caddy_config:
  caddy_data:
    external: true
  static: