import{V as A,C as X,L as Y,F as Z,G as $,B as N,a as I,b as B,M as R,P as F,c as ee,d as H,e as S,f as U,S as te,g as se,W as ne,h as oe,i as P,j as ie,k as re,A as ae,D as le}from"./GLTFLoader-CWh8kGrX.js";const ce=/^[og]\s*(.+)?/,he=/^mtllib /,ue=/^usemtl /,de=/^usemap /,T=/\s+/,k=new A,D=new A,W=new A,q=new A,w=new A,z=new X;function fe(){const x={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(s,e){if(this.object&&this.object.fromDeclaration===!1){this.object.name=s,this.object.fromDeclaration=e!==!1;return}const o=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:s||"",fromDeclaration:e!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,n){const a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);const f={index:this.materials.length,name:t||"",mtllib:Array.isArray(n)&&n.length>0?n[n.length-1]:"",smooth:a!==void 0?a.smooth:this.smooth,groupStart:a!==void 0?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(g){const r={index:typeof g=="number"?g:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return r.clone=this.clone.bind(r),r}};return this.materials.push(f),f},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const n=this.currentMaterial();if(n&&n.groupEnd===-1&&(n.groupEnd=this.geometry.vertices.length/3,n.groupCount=n.groupEnd-n.groupStart,n.inherited=!1),t&&this.materials.length>1)for(let a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return t&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),n}},o&&o.name&&typeof o.clone=="function"){const t=o.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(s,e){const o=parseInt(s,10);return(o>=0?o-1:o+e/3)*3},parseNormalIndex:function(s,e){const o=parseInt(s,10);return(o>=0?o-1:o+e/3)*3},parseUVIndex:function(s,e){const o=parseInt(s,10);return(o>=0?o-1:o+e/2)*2},addVertex:function(s,e,o){const t=this.vertices,n=this.object.geometry.vertices;n.push(t[s+0],t[s+1],t[s+2]),n.push(t[e+0],t[e+1],t[e+2]),n.push(t[o+0],t[o+1],t[o+2])},addVertexPoint:function(s){const e=this.vertices;this.object.geometry.vertices.push(e[s+0],e[s+1],e[s+2])},addVertexLine:function(s){const e=this.vertices;this.object.geometry.vertices.push(e[s+0],e[s+1],e[s+2])},addNormal:function(s,e,o){const t=this.normals,n=this.object.geometry.normals;n.push(t[s+0],t[s+1],t[s+2]),n.push(t[e+0],t[e+1],t[e+2]),n.push(t[o+0],t[o+1],t[o+2])},addFaceNormal:function(s,e,o){const t=this.vertices,n=this.object.geometry.normals;k.fromArray(t,s),D.fromArray(t,e),W.fromArray(t,o),w.subVectors(W,D),q.subVectors(k,D),w.cross(q),w.normalize(),n.push(w.x,w.y,w.z),n.push(w.x,w.y,w.z),n.push(w.x,w.y,w.z)},addColor:function(s,e,o){const t=this.colors,n=this.object.geometry.colors;t[s]!==void 0&&n.push(t[s+0],t[s+1],t[s+2]),t[e]!==void 0&&n.push(t[e+0],t[e+1],t[e+2]),t[o]!==void 0&&n.push(t[o+0],t[o+1],t[o+2])},addUV:function(s,e,o){const t=this.uvs,n=this.object.geometry.uvs;n.push(t[s+0],t[s+1]),n.push(t[e+0],t[e+1]),n.push(t[o+0],t[o+1])},addDefaultUV:function(){const s=this.object.geometry.uvs;s.push(0,0),s.push(0,0),s.push(0,0)},addUVLine:function(s){const e=this.uvs;this.object.geometry.uvs.push(e[s+0],e[s+1])},addFace:function(s,e,o,t,n,a,f,g,r){const h=this.vertices.length;let i=this.parseVertexIndex(s,h),l=this.parseVertexIndex(e,h),u=this.parseVertexIndex(o,h);if(this.addVertex(i,l,u),this.addColor(i,l,u),f!==void 0&&f!==""){const m=this.normals.length;i=this.parseNormalIndex(f,m),l=this.parseNormalIndex(g,m),u=this.parseNormalIndex(r,m),this.addNormal(i,l,u)}else this.addFaceNormal(i,l,u);if(t!==void 0&&t!==""){const m=this.uvs.length;i=this.parseUVIndex(t,m),l=this.parseUVIndex(n,m),u=this.parseUVIndex(a,m),this.addUV(i,l,u),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(s){this.object.geometry.type="Points";const e=this.vertices.length;for(let o=0,t=s.length;o<t;o++){const n=this.parseVertexIndex(s[o],e);this.addVertexPoint(n),this.addColor(n)}},addLineGeometry:function(s,e){this.object.geometry.type="Line";const o=this.vertices.length,t=this.uvs.length;for(let n=0,a=s.length;n<a;n++)this.addVertexLine(this.parseVertexIndex(s[n],o));for(let n=0,a=e.length;n<a;n++)this.addUVLine(this.parseUVIndex(e[n],t))}};return x.startObject("",!1),x}class me extends Y{constructor(s){super(s),this.materials=null}load(s,e,o,t){const n=this,a=new Z(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(s,function(f){try{e(n.parse(f))}catch(g){t?t(g):console.error(g),n.manager.itemError(s)}},o,t)}setMaterials(s){return this.materials=s,this}parse(s){const e=new fe;s.indexOf(`\r
`)!==-1&&(s=s.replace(/\r\n/g,`
`)),s.indexOf(`\\
`)!==-1&&(s=s.replace(/\\\n/g,""));const o=s.split(`
`);let t=[];for(let f=0,g=o.length;f<g;f++){const r=o[f].trimStart();if(r.length===0)continue;const h=r.charAt(0);if(h!=="#")if(h==="v"){const i=r.split(T);switch(i[0]){case"v":e.vertices.push(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3])),i.length>=7?(z.setRGB(parseFloat(i[4]),parseFloat(i[5]),parseFloat(i[6])).convertSRGBToLinear(),e.colors.push(z.r,z.g,z.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(i[1]),parseFloat(i[2]),parseFloat(i[3]));break;case"vt":e.uvs.push(parseFloat(i[1]),parseFloat(i[2]));break}}else if(h==="f"){const l=r.slice(1).trim().split(T),u=[];for(let c=0,p=l.length;c<p;c++){const b=l[c];if(b.length>0){const y=b.split("/");u.push(y)}}const m=u[0];for(let c=1,p=u.length-1;c<p;c++){const b=u[c],y=u[c+1];e.addFace(m[0],b[0],y[0],m[1],b[1],y[1],m[2],b[2],y[2])}}else if(h==="l"){const i=r.substring(1).trim().split(" ");let l=[];const u=[];if(r.indexOf("/")===-1)l=i;else for(let m=0,c=i.length;m<c;m++){const p=i[m].split("/");p[0]!==""&&l.push(p[0]),p[1]!==""&&u.push(p[1])}e.addLineGeometry(l,u)}else if(h==="p"){const l=r.slice(1).trim().split(" ");e.addPointGeometry(l)}else if((t=ce.exec(r))!==null){const i=(" "+t[0].slice(1).trim()).slice(1);e.startObject(i)}else if(ue.test(r))e.object.startMaterial(r.substring(7).trim(),e.materialLibraries);else if(he.test(r))e.materialLibraries.push(r.substring(7).trim());else if(de.test(r))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(h==="s"){if(t=r.split(" "),t.length>1){const l=t[1].trim().toLowerCase();e.object.smooth=l!=="0"&&l!=="off"}else e.object.smooth=!0;const i=e.object.currentMaterial();i&&(i.smooth=e.object.smooth)}else{if(r==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+r+'"')}}e.finalize();const n=new $;if(n.materialLibraries=[].concat(e.materialLibraries),!(e.objects.length===1&&e.objects[0].geometry.vertices.length===0)===!0)for(let f=0,g=e.objects.length;f<g;f++){const r=e.objects[f],h=r.geometry,i=r.materials,l=h.type==="Line",u=h.type==="Points";let m=!1;if(h.vertices.length===0)continue;const c=new N;c.setAttribute("position",new I(h.vertices,3)),h.normals.length>0&&c.setAttribute("normal",new I(h.normals,3)),h.colors.length>0&&(m=!0,c.setAttribute("color",new I(h.colors,3))),h.hasUVIndices===!0&&c.setAttribute("uv",new I(h.uvs,2));const p=[];for(let y=0,G=i.length;y<G;y++){const j=i[y],O=j.name+"_"+j.smooth+"_"+m;let d=e.materials[O];if(this.materials!==null){if(d=this.materials.create(j.name),l&&d&&!(d instanceof B)){const _=new B;R.prototype.copy.call(_,d),_.color.copy(d.color),d=_}else if(u&&d&&!(d instanceof F)){const _=new F({size:10,sizeAttenuation:!1});R.prototype.copy.call(_,d),_.color.copy(d.color),_.map=d.map,d=_}}d===void 0&&(l?d=new B:u?d=new F({size:1,sizeAttenuation:!1}):d=new ee,d.name=j.name,d.flatShading=!j.smooth,d.vertexColors=m,e.materials[O]=d),p.push(d)}let b;if(p.length>1){for(let y=0,G=i.length;y<G;y++){const j=i[y];c.addGroup(j.groupStart,j.groupCount,y)}l?b=new H(c,p):u?b=new S(c,p):b=new U(c,p)}else l?b=new H(c,p[0]):u?b=new S(c,p[0]):b=new U(c,p[0]);b.name=r.name,n.add(b)}else if(e.vertices.length>0){const f=new F({size:1,sizeAttenuation:!1}),g=new N;g.setAttribute("position",new I(e.vertices,3)),e.colors.length>0&&e.colors[0]!==void 0&&(g.setAttribute("color",new I(e.colors,3)),f.vertexColors=!0);const r=new S(g,f);n.add(r)}return n}}const V=new te,J=new se(75,window.innerWidth/window.innerHeight,.1,1e3),E=new ne;E.setSize(window.innerWidth,window.innerHeight);const pe=E.domElement;document.body.appendChild(pe);let v,L;const ge=new me,be=new oe;ge.load(assets.models.RedCube,function(x){v=x.children[0];let s=new P({color:14553361}),e=new P({color:131586}),o=new P({color:16711422});v.material[0]=s,v.material[1]=o,v.material[2]=e,v.name="Red Cube",v.position.x=2.5,v.position.y=2.5,V.add(v),console.log("Cube 1"),console.log(v),console.log("Cube 1 material"),console.log(v.material),console.log("Cube 1 material[0]"),console.log(v.material[0]),be.load(assets.models.BlueCube,function(t){L=t.scene.children[0],L.name="Blue Cube",L.position.x=-2.5,L.position.y=2.5,V.add(L),console.log("Cube 2"),console.log(L),Q()},void 0,function(t){console.error(t)})},function(x){console.log("LOADING: "+x.loaded/x.total*100+"%")},function(x){console.error(x)});const K=new ie(1,1,1),ye=new re({color:65280}),ve=new P({color:65535}),C=new U(K,ye);C.name="Green Cube";C.position.x=-2.5;C.position.y=-2.5;console.log("Cube 3");console.log(C);const M=new U(K,ve);M.name="Shadowy Cube";M.position.x=2.5;M.position.y=-2.5;console.log("Cube 4");console.log(M);const we=new ae(16711422),xe=new le(16777198,.8);V.add(C);V.add(M);V.add(we);V.add(xe);J.position.z=5;function Q(){requestAnimationFrame(Q),v.rotation.x+=.01,v.rotation.y+=.01,L.rotation.x+=.02,L.rotation.y+=.02,C.rotation.x+=.01,C.rotation.y+=.01,M.rotation.x+=.01,M.rotation.y+=.01,E.render(V,J)}
